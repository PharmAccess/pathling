"use strict";(self.webpackChunkpathling_site=self.webpackChunkpathling_site||[]).push([[983],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=a,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9150:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:7},i="Kafka integration",s={unversionedId:"libraries/kafka",id:"libraries/kafka",title:"Kafka integration",description:"Pathling supports Kafka as a streaming data source, and all the operations",source:"@site/docs/libraries/kafka.md",sourceDirName:"libraries",slug:"/libraries/kafka",permalink:"/docs/libraries/kafka",draft:!1,editUrl:"https://github.com/aehrc/pathling/tree/main/site/docs/libraries/kafka.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"libraries",previous:{title:"Spark cluster configuration",permalink:"/docs/libraries/spark-cluster"}},c={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kafka-integration"},"Kafka integration"),(0,a.kt)("p",null,"Pathling supports Kafka as a streaming data source, and all the operations\navailable within the library are able to execute continuously across a stream of\ndata."),(0,a.kt)("p",null,"For more information about Spark's Kafka integration, see\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/3.3.1/structured-streaming-kafka-integration.html#content"},"Structured Streaming + Kafka Integration Guide"),"."),(0,a.kt)("p",null,"Here is an example of streaming a source of FHIR data, encoding it and then\nperforming a terminology operation upon it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from pathling import PathlingContext\nfrom pathling.coding import Coding\n\npc = PathlingContext.create()\n\n# Subscribe to a stream of FHIR Bundles from a Kafka topic.\ndf = (\n    pc.spark.readStream.format("kafka")\n    .option("kafka.bootstrap.servers", "kafka:9092")\n    .option("subscribe", "some-topic")\n    .load()\n    .selectExpr("CAST(value AS STRING) as json_bundle")\n)\n\n# Pull out the MedicationAdministration resources and put them into a dataset.\nmed_administrations = pc.encode_bundle(df, "MedicationAdministration").selectExpr(\n    "id", "status", "EXPLODE_OUTER(medicationCodeableConcept.coding) as coding"\n)\n\n# Perform a subsumes operation on the medication coding to determine whether it is a type of\n# anti-coagulant.\nresult = pc.subsumes(\n    med_administrations,\n    "ANTICOAGULANT",\n    # 372862008 |Anticoagulant|\n    left_coding=Coding("http://snomed.info/sct", "372862008"),\n    right_coding_column="coding",\n)\n')))}u.isMDXComponent=!0}}]);