"use strict";(self.webpackChunkpathling_site=self.webpackChunkpathling_site||[]).push([[564],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),g=s(n),f=i,m=g["".concat(l,".").concat(f)]||g[f]||u[f]||o;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=g;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9365:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={},l="pathling-client",s={unversionedId:"libraries/javascript/pathling-client",id:"libraries/javascript/pathling-client",title:"pathling-client",description:"pathling-client is a client",source:"@site/docs/libraries/javascript/pathling-client.md",sourceDirName:"libraries/javascript",slug:"/libraries/javascript/pathling-client",permalink:"/docs/libraries/javascript/pathling-client",draft:!1,editUrl:"https://github.com/aehrc/pathling/tree/main/site/docs/libraries/javascript/pathling-client.md",tags:[],version:"current",frontMatter:{},sidebar:"libraries",previous:{title:"Java",permalink:"/docs/libraries/java"},next:{title:"pathling-import",permalink:"/docs/libraries/javascript/pathling-import"}},p={},u=[{value:"Example usage",id:"example-usage",level:2}],g={toc:u};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pathling-client"},"pathling-client"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/pathling-client"},"pathling-client")," is a client\nlibrary for the Pathling FHIR API, for use with JavaScript and TypeScript."),(0,o.kt)("h2",{id:"example-usage"},"Example usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import PathlingClient from \'pathling-client\';\n\nconst client = new PathlingClient("https://demo.pathling.app/fhir");\n\n// Invoke the import operation.\nclient.import({\n    sources: [\n        { resourceType: "Patient", url: "s3://somebucket/Patient.ndjson" },\n        { resourceType: "Condition", url: "s3://somebucket/Condition.ndjson" },\n    ]\n}).then(result => console.log(result));\n\n// Invoke the aggregate operation.\nclient.aggregate({\n    subjectResource: "Patient",\n    aggregations: ["count()"],\n    groupings: [\n        "reverseResolve(Condition.subject).code.coding" +\n        ".where(subsumedBy(http://snomed.info/sct|73211009))"\n    ]\n}).then(result => console.log(result));\n\n// Invoke the search operation.\nclient.search({\n    subjectResource: "Patient",\n    filters: [\n        "(reverseResolve(Condition.subject).code.coding" +\n        ".where($this.subsumedBy(http://snomed.info/sct|73211009))) " +\n        "contains http://snomed.info/sct|427089005||\'Diabetes from Cystic Fibrosis\'"\n    ],\n}).then(result => console.log(result));\n\n// Invoke the extract operation.\nclient.extract({\n    subjectResource: "Patient",\n    columns: [\n        "id",\n        "reverseResolve(Condition.subject).code.coding"\n    ],\n    filters: [\n        "reverseResolve(Condition.subject).code" +\n        ".subsumedBy(http://snomed.info/sct|73211009).anyTrue"\n    ]\n}).then(result => console.log(result));\n')))}f.isMDXComponent=!0}}]);