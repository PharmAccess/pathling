"use strict";(self.webpackChunkpathling_site=self.webpackChunkpathling_site||[]).push([[797],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(t),h=a,g=c["".concat(l,".").concat(h)]||c[h]||m[h]||o;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=h;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9882:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:10,sidebar_label:"Kubernetes"},i="Kubernetes",s={unversionedId:"server/kubernetes",id:"server/kubernetes",title:"Kubernetes",description:"Kubernetes is an open-source system for automating",source:"@site/docs/server/kubernetes.md",sourceDirName:"server",slug:"/server/kubernetes",permalink:"/docs/server/kubernetes",draft:!1,editUrl:"https://github.com/aehrc/pathling/tree/main/site/docs/server/kubernetes.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"Kubernetes"},sidebar:"server",previous:{title:"Synchronization",permalink:"/docs/server/sync"}},l={},u=[{value:"Installation",id:"installation",level:2},{value:"Example configuration",id:"example-configuration",level:2},{value:"Single node",id:"single-node",level:3},{value:"Cluster",id:"cluster",level:3}],p={toc:u},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kubernetes"},"Kubernetes"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/"},"Kubernetes")," is an open-source system for automating\ndeployment, scaling, and management of containerized applications. Support for\ndeploying Pathling on Kubernetes is provided via a ",(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm"),"\nchart."),(0,a.kt)("p",null,"The Helm chart includes the following features:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Support for startup, liveness and readiness probes powered by the Spring Boot\nActuator endpoint"),(0,a.kt)("li",{parentName:"ul"},"Services for the FHIR API, Actuator management API, Spark UI, driver endpoint\nand block manager endpoint"),(0,a.kt)("li",{parentName:"ul"},"Support for the Spark Kubernetes cluster manager, including a service account,\nrole and role binding to allow it to manage executor pods"),(0,a.kt)("li",{parentName:"ul"},"Customisation of resource requests and limits"),(0,a.kt)("li",{parentName:"ul"},"Configuration of volumes and volume mounts"),(0,a.kt)("li",{parentName:"ul"},"Image pull secrets for authenticated image registries"),(0,a.kt)("li",{parentName:"ul"},"Tolerations and affinity for control over pod scheduling"),(0,a.kt)("li",{parentName:"ul"},"Secret config for sensitive configuration values")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"To install the chart, run the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add pathling https://pathling.csiro.au/helm\nhelm repo update\nhelm install pathling pathling/pathling\n")),(0,a.kt)("h2",{id:"example-configuration"},"Example configuration"),(0,a.kt)("h3",{id:"single-node"},"Single node"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'pathling:\n  image: aehrc/pathling:6\n  resources:\n    requests:\n      cpu: 2\n      memory: 4G\n    limits:\n      memory: 4G\n    maxHeapSize: 3g\n  volumes:\n    - name: warehouse\n      hostPath:\n        path: /home/user/data/pathling\n  volumeMounts:\n    - name: warehouse\n      mountPath: /usr/share/warehouse\n      readOnly: false\n  config:\n      pathling.implementationDescription: My Pathling Server\n      pathling.terminology.cache.maxEntries: 500000\n      pathling.terminology.cache.overrideExpiry: "2592000"\n      pathling.encoding.openTypes: string,code,decimal,Coding,Address\n      logging.level.au.csiro.pathling: debug\n')),(0,a.kt)("h3",{id:"cluster"},"Cluster"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'pathling:\n  image: aehrc/pathling:6\n  resources:\n    requests:\n      cpu: 1\n      memory: 2G\n    limits:\n      memory: 2G\n    maxHeapSize: 1500m \n  volumes:\n    - name: warehouse\n      hostPath:\n        path: /home/user/data/pathling\n  volumeMounts:\n    - name: warehouse\n      mountPath: /usr/share/warehouse\n      readOnly: false\n  serviceAccount: spark-service-account\n  config:\n      pathling.implementationDescription: My Pathling Server\n      pathling.terminology.cache.maxEntries: 500000\n      pathling.terminology.cache.overrideExpiry: "2592000"\n      pathling.encoding.openTypes: string,code,decimal,Coding,Address\n      logging.level.au.csiro.pathling: debug\n      spark.master: k8s://https://kubernetes.default.svc\n      spark.kubernetes.namespace: pathling\n      spark.kubernetes.executor.container.image: aehrc/pathling:6\n      spark.kubernetes.executor.volumes.hostPath.warehouse.options.path: /home/user/data/pathling\n      spark.kubernetes.executor.volumes.hostPath.warehouse.mount.path: /usr/share/warehouse\n      spark.kubernetes.executor.volumes.hostPath.warehouse.mount.readOnly: false\n      spark.executor.instances: 3\n      spark.executor.memory: 3G\n      spark.kubernetes.executor.request.cores: 2\n      spark.kubernetes.executor.limit.cores: 2\n      spark.kubernetes.executor.request.memory: 4G\n      spark.kubernetes.executor.limit.memory: 4G\n')))}m.isMDXComponent=!0}}]);