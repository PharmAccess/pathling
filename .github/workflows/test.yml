# This workflow will build the software and documentation to ensure there are no errors, and also
# execute the tests.

name: Test

on:
  push:
    branches-ignore:
      - gh-pages

# If the actor is Dependabot, we need to avoid anything that requires privileged access - so we skip
# the integration test (which requires a secret), and also the test reporting actions (which require
# a GitHub token).
jobs:
  encoders:
    name: Build and test encoders
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run the verify goal with Maven
        if: ${{ github.actor == 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl encoders -am \
          -DskipScalaDocs
        timeout-minutes: 30
      - name: Run the verify goal with Maven
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl encoders -am \
          -Dmaven.test.failure.ignore=true
        timeout-minutes: 30
      - name: Upload encoders test reports
        uses: actions/upload-artifact@v2
        with:
          name: encoders-surefire-reports
          path: encoders/target/surefire-reports
      - name: Upload test coverage report
        uses: actions/upload-artifact@v2
        with:
          name: encoders-coverage
          path: encoders/target/site/jacoco/jacoco.xml
      - name: Upload dump files
        uses: actions/upload-artifact@v2
        with:
          name: encoders-dump-files
          path: |
            **/*.dump
            **/*.dumpstream
      - name: Publish test results
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Encoders test report
          fail_on_test_failures: true
  fhir-server-1:
    name: Build and test FHIR server (tranche 1)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: fhir-server/src/test/resources/test-data/parquet
          key: ${{ runner.os }}-test-data-${{ hashFiles('fhir-server/src/test/resources/test-data/fhir/*.ndjson,encoders/src/main/**/*.java,encoders/src/main/**/*.scala') }}
          restore-keys: |
            ${{ runner.os }}-test-data-${{ hashFiles('fhir-server/src/test/resources/test-data/fhir/*.ndjson,encoders/src/main/**/*.java,encoders/src/main/**/*.scala') }}
      - name: Run the verify goal with Maven (Dependabot)
        if: ${{ github.actor == 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl fhir-server -am \
          -Ptest-tranche-1 \
          -DskipITs -DskipEncodersTests -DskipScalaDocs
        timeout-minutes: 45
      - name: Run the verify goal with Maven
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl fhir-server -am \
          -Ptest-tranche-1 \
          -Dmaven.test.failure.ignore -DskipEncodersTests
        timeout-minutes: 45
      - name: Upload fhir-server test reports
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-1-surefire-reports
          path: fhir-server/target/surefire-reports
      - name: Upload test coverage report
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-1-coverage
          path: fhir-server/target/site/jacoco/jacoco.xml
      - name: Upload timing log
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-1-timing-log
          path: fhir-server/target/timing.log
      - name: Upload dump files
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-1-dump-files
          path: |
            **/*.dump
            **/*.dumpstream
      - name: Publish test results
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: FHIR server test report 1
          fail_on_test_failures: true
  fhir-server-2:
    name: Build and test FHIR server (tranche 2)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: fhir-server/src/test/resources/test-data/parquet
          key: ${{ runner.os }}-test-data-${{ hashFiles('fhir-server/src/test/resources/test-data/fhir/*.ndjson,encoders/src/main/**/*.java,encoders/src/main/**/*.scala') }}
          restore-keys: |
            ${{ runner.os }}-test-data-${{ hashFiles('fhir-server/src/test/resources/test-data/fhir/*.ndjson,encoders/src/main/**/*.java,encoders/src/main/**/*.scala') }}
      - name: Run the verify goal with Maven (Dependabot)
        if: ${{ github.actor == 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl fhir-server -am \
          -Ptest-tranche-2,docker \
          -Dpathling.fhirServerDockerTag=${{ github.sha }} \
          -DskipITs -DskipEncodersTests -DskipScalaDocs
        timeout-minutes: 45
      - name: Run the verify goal with Maven
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl fhir-server -am \
          -Ptest-tranche-2,docker \
          -Dpathling.fhirServerDockerTag=${{ github.sha }} \
          -Dpathling.systemTest.auth.clientSecret=${{ secrets.TEST_CLIENT_SECRET }} \
          -Dmaven.test.failure.ignore -DskipEncodersTests
        timeout-minutes: 45
      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aehrc/pathling:${{ github.sha }}'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      - name: Upload fhir-server test reports
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-2-surefire-reports
          path: fhir-server/target/surefire-reports
      - name: Upload test coverage report
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-2-coverage
          path: fhir-server/target/site/jacoco/jacoco.xml
      - name: Upload timing log
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-2-timing-log
          path: fhir-server/target/timing.log
      - name: Upload dump files
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-2-dump-files
          path: |
            **/*.dump
            **/*.dumpstream
      - name: Publish test results
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: FHIR server test report 2
          fail_on_test_failures: true
  fhir-server-3:
    name: Build and test FHIR server (tranche 3)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: fhir-server/src/test/resources/test-data/parquet
          key: ${{ runner.os }}-test-data-${{ hashFiles('fhir-server/src/test/resources/test-data/fhir/*.ndjson,encoders/src/main/**/*.java,encoders/src/main/**/*.scala') }}
          restore-keys: |
            ${{ runner.os }}-test-data-${{ hashFiles('fhir-server/src/test/resources/test-data/fhir/*.ndjson,encoders/src/main/**/*.java,encoders/src/main/**/*.scala') }}
      - name: Run the verify goal with Maven (Dependabot)
        if: ${{ github.actor == 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl fhir-server -am \
          -Ptest-tranche-3 \
          -DskipITs -DskipEncodersTests -DskipScalaDocs
        timeout-minutes: 45
      - name: Run the verify goal with Maven
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          mvn --batch-mode verify \
          -pl fhir-server -am \
          -Ptest-tranche-3 \
          -Dmaven.test.failure.ignore -DskipEncodersTests
        timeout-minutes: 45
      - name: Upload fhir-server test reports
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-3-surefire-reports
          path: fhir-server/target/surefire-reports
      - name: Upload test coverage report
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-3-coverage
          path: fhir-server/target/site/jacoco/jacoco.xml
      - name: Upload timing log
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-3-timing-log
          path: fhir-server/target/timing.log
      - name: Upload dump files
        uses: actions/upload-artifact@v2
        with:
          name: fhir-server-3-dump-files
          path: |
            **/*.dump
            **/*.dumpstream
      - name: Publish test results
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: FHIR server test report 3
          fail_on_test_failures: true
  js-client:
    name: Build JavaScript client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-js-
      - name: Run the verify goal with Maven
        run: |
          mvn --batch-mode verify \
          -pl lib/js -am
        timeout-minutes: 5
  import:
    name: Build import lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-import-
      - name: Run the verify goal with Maven
        run: |
          mvn --batch-mode verify \
          -pl lib/import -am
        timeout-minutes: 5
      - name: Upload import lambda
        uses: actions/upload-artifact@v2
        with:
          name: import-lambda
          path: lib/import/target/pathling-import-lambda.zip
  python-api:
    name: Build and test Python API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache Python packages
        uses: actions/cache@v2
        id: pythoncache
        with:
          path: /home/runner/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('lib/python/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip
      - name: Run the verify goal with Maven
        run: |
          mvn --batch-mode verify \
          -pl lib/python -am \
          -DskipEncodersTests -DskipPythonDocs
        timeout-minutes: 15
  site:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run the verify goal with Maven
        run: |
          mvn --batch-mode verify \
          -pl site -am \
          -DskipTests
        timeout-minutes: 30
  upload-coverage:
    name: Upload coverage to Codecov
    runs-on: ubuntu-latest
    needs: [ encoders,fhir-server-1,fhir-server-2,fhir-server-3 ]
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download encoders coverage report
        uses: actions/download-artifact@v3
        with:
          name: encoders-coverage
          path: encoders-coverage
      - name: Download FHIR server coverage report 1
        uses: actions/download-artifact@v3
        with:
          name: fhir-server-1-coverage
          path: fhir-server-1-coverage
      - name: Download FHIR server coverage report 2
        uses: actions/download-artifact@v3
        with:
          name: fhir-server-2-coverage
          path: fhir-server-2-coverage
      - name: Download FHIR server coverage report 3
        uses: actions/download-artifact@v3
        with:
          name: fhir-server-3-coverage
          path: fhir-server-3-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: encoders-coverage/jacoco.xml,fhir-server-1-coverage/jacoco.xml,fhir-server-2-coverage/jacoco.xml,fhir-server-3-coverage/jacoco.xml
