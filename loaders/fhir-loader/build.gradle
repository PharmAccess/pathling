apply plugin: 'application'
mainClassName = 'au.csiro.clinsight.FhirLoaderBootstrap'

group 'au.csiro.clinsight.loaders'
version '1.0-SNAPSHOT'

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation project(':utilities')

  implementation group: 'org.apache.spark', name: 'spark-core_2.11', version: '2.3.3'
  implementation group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.3.3'
  implementation group: 'org.apache.spark', name: 'spark-hive_2.11', version: '2.3.3'
  implementation group: 'com.cerner.bunsen', name: 'bunsen-core', version: '0.4.6-clinsight-SNAPSHOT'
  implementation group: 'com.cerner.bunsen', name: 'bunsen-stu3', version: '0.4.6-clinsight-SNAPSHOT'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
}

configurations.all {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    if (details.requested.group == 'com.google.guava' && details.requested.name == 'guava') {
      details.useVersion '16.0.1'
      details.because 'incompatibility between versions'
    }
  }
}

jar {
  manifest {
    attributes(
        'Main-Class': 'au.csiro.clinsight.FhirLoaderBootstrap',
        'Class-Path': configurations.default.files.collect { file -> "/lib/$file.name" }.join(' ')
    )
  }
}

task dependencyJar(type: Copy) {
  from configurations.default
  into "$buildDir/dependencies"
}

def blackHole = new OutputStream() {
  @Override
  void write(int b) {}
}

task dockerBuild(type: Exec) {
  dependsOn jar
  dependsOn dependencyJar
  commandLine 'docker', 'build', '-t', 'docker-registry.it.csiro.au/clinsight/fhir-loader', '.'
  standardOutput blackHole
}
build.finalizedBy(dockerBuild)

task dockerPush(type: Exec) {
  dependsOn dockerBuild
  commandLine 'docker', 'push', 'docker-registry.it.csiro.au/clinsight/fhir-loader'
  standardOutput blackHole
}

startScripts.enabled = false
distTar.enabled = false
distZip.enabled = false
